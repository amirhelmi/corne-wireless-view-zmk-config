/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include "mouse.dtsi"
#include "corne.dtsi"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {

   
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&mt LG(LS(S)) W    &kp L             &kp Y             &kp P          &mt LA(HOME) B         &kp  Z    &mt INSERT F    &kp O         &kp U           &mt GRAVE SQT    
  &kp C              &mt LCTRL  R     &kp S        &kp T       &kp G                  &kp M     &kp N           &kp  E               &mt LCTRL I    &kp A  
 &mt LSHIFT Q        &mt LC(FSLH) J    &mt LGUI V       &kp D           &kp K                 &kp X     &kp H           &mt BSLH FSLH        &kp COMMA       &kp DOT 
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |BTCLR|     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
    &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  
  &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  
                                        &bt BT_CLR    &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

      

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };


        layer_6-mousedemo {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &msc SCROLL_UP    &trans          &mmv MOVE_UP    &trans           &trans  
&trans  &trans  &trans  &trans  &trans    &msc SCROLL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  
                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
